{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport PrimaryBtn from \"../components/PrimaryBtn\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar StartGameScreen = function StartGameScreen(_ref) {\n  var onPickNum = _ref.onPickNum;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    enteredNum = _useState2[0],\n    setEnteredNum = _useState2[1];\n  var numInputHandler = function numInputHandler(enteredText) {\n    setEnteredNum(enteredText);\n  };\n  var reserInputHandler = function reserInputHandler() {\n    return setEnteredNum('');\n  };\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNum);\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid Number!', 'Number has to be a number between 1 and 99', [{\n        text: 'ok',\n        style: 'destructive',\n        onPress: reserInputHandler\n      }]);\n      return;\n    } else {\n      onPickNum(chosenNumber);\n    }\n  };\n  return _jsxs(View, {\n    style: styles.inputContainer,\n    children: [_jsx(TextInput, {\n      style: styles.numberInput,\n      keyboardType: \"number-pad\",\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      maxLength: 2,\n      value: enteredNum,\n      onChangeText: numInputHandler\n    }), _jsxs(View, {\n      style: styles.btnsContainer,\n      children: [_jsx(View, {\n        style: styles.btnContainer,\n        children: _jsx(PrimaryBtn, {\n          onPress: reserInputHandler,\n          children: \"Reset\"\n        })\n      }), _jsx(View, {\n        style: styles.btnContainer,\n        children: _jsx(PrimaryBtn, {\n          onPress: confirmInputHandler,\n          children: \"Confirm\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  inputContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 100,\n    marginHorizontal: 24,\n    padding: 16,\n    backgroundColor: '#3b021f',\n    borderRadius: 8,\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 6,\n    shadowOpacity: 0.25\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: '#ddb52f',\n    borderBottomWidth: 2,\n    color: '#ddb52f',\n    marginVertical: 8,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  btnsContainer: {\n    flexDirection: 'row'\n  },\n  btnContainer: {\n    flex: 1\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"names":["React","useState","View","TextInput","StyleSheet","Alert","PrimaryBtn","jsx","_jsx","jsxs","_jsxs","StartGameScreen","_ref","onPickNum","_useState","_useState2","_slicedToArray","enteredNum","setEnteredNum","numInputHandler","enteredText","reserInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","alert","text","style","onPress","styles","inputContainer","children","numberInput","keyboardType","autoCapitalize","autoCorrect","maxLength","value","onChangeText","btnsContainer","btnContainer","create","justifyContent","alignItems","marginTop","marginHorizontal","padding","backgroundColor","borderRadius","elevation","shadowColor","shadowOffset","width","height","shadowRadius","shadowOpacity","fontSize","borderBottomColor","borderBottomWidth","color","marginVertical","fontWeight","textAlign","flexDirection","flex"],"sources":["C:/Users/mdfak/Desktop/WORK/NATIVE/starting-project/screens/StartGameScreen.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { View, TextInput, StyleSheet, Alert } from 'react-native'\r\nimport PrimaryBtn from '../components/PrimaryBtn'\r\n\r\nconst StartGameScreen = ({ onPickNum }) => {\r\n\r\n    const [enteredNum, setEnteredNum] = useState('')\r\n\r\n    const numInputHandler = (enteredText) => {\r\n        setEnteredNum(enteredText)\r\n    }\r\n\r\n    const reserInputHandler = () => setEnteredNum('')\r\n\r\n    const confirmInputHandler = () => {\r\n        const chosenNumber = parseInt(enteredNum)\r\n        if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\r\n            //show alert\r\n            Alert.alert(\r\n                'Invalid Number!',\r\n                'Number has to be a number between 1 and 99',\r\n                [{ text: 'ok', style: 'destructive', onPress: reserInputHandler }]\r\n            )\r\n            return\r\n        } else {\r\n            onPickNum(chosenNumber)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.inputContainer}>\r\n            <TextInput\r\n                style={styles.numberInput}\r\n                keyboardType='number-pad'\r\n                autoCapitalize='none'\r\n                autoCorrect={false}\r\n                maxLength={2}\r\n                value={enteredNum}\r\n                onChangeText={numInputHandler}\r\n            />\r\n            <View style={styles.btnsContainer}>\r\n                <View style={styles.btnContainer}>\r\n                    <PrimaryBtn onPress={reserInputHandler}>Reset</PrimaryBtn>\r\n                </View>\r\n                <View style={styles.btnContainer}>\r\n                    <PrimaryBtn onPress={confirmInputHandler}>Confirm</PrimaryBtn>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    inputContainer: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 100,\r\n        marginHorizontal: 24,\r\n        padding: 16,\r\n        backgroundColor: '#3b021f',\r\n        borderRadius: 8,\r\n        elevation: 4, //**  only android specific for shadow style*/\r\n        //!! only for IOS specific !/\r\n        shadowColor: 'black',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowRadius: 6,\r\n        shadowOpacity: 0.25\r\n        //!! only for IOS specific !/\r\n    },\r\n    numberInput: {\r\n        height: 50,\r\n        width: 50,\r\n        fontSize: 32,\r\n        borderBottomColor: '#ddb52f',\r\n        borderBottomWidth: 2,\r\n        color: '#ddb52f',\r\n        marginVertical: 8,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n    btnsContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    btnContainer: {\r\n        flex: 1\r\n    }\r\n})\r\n\r\nexport default StartGameScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}